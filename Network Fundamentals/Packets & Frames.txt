# What are Packets and Frames?

-> Packets and frames are small pieces of data that, when forming together, make a larger piece of information or message. However, they are two different things in the OSI model. A frame is at layer 2 - the data link layer, meaning there is no such information as IP addresses. Think of this as putting an envelope within an envelope and sending it away. The first envelope will be the packet that you mail, but once it is opened, the envelope within still exists and contains data (this is a frame).

This process is called encapsulation. At this stage, it's safe to assume that when we are talking about anything IP addresses, we are talking about packets. When the encapsulating information is stripped away, we're talking about the frame itself.

Packets are an efficient way of communicating data across networked devices. Because this data is exchanged in small pieces, there is less chance of bottlenecking occurring across a network than large messages being sent at once.

For example, when loading an image from a website, this image is not sent to your computer as a whole, but rather small pieces where it is reconstructed on your computer.

Packets have different structures that are dependant upon the type of packet that is being sent. As we'll come on to discuss, networking is full of standards and protocols that act as a set of rules for how the packet is handled on a device. With the Internet predicted to have approximately 50 billion devices connected by the end of 2020, things quickly get out of hand if there is no standardisation.

A packet using this protocol will have a set of headers that contain additional pieces of information to the data that is being sent across a network.

Some notable headers include:

	Header	                                                  Description

	Time to Live	            This field sets an expiry timer for the packet to not clog up your network if it never manages to reach a host or escape!

	Checksum	                This field provides integrity checking for protocols such as TCP/IP. If any data is changed, this value will be different from what was expected and therefore corrupt.

	Source Address	            The IP address of the device that the packet is being sent from so that data knows where to return to.
	
	Destination Address	        The device's IP address the packet is being sent to so that data knows where to travel next.



# TCP/IP (The Three-Way Handshake).

-> TCP (or Transmission Control Protocol for short) is another one of these rules used in networking.

This protocol is very similar to the OSI model. The TCP/IP protocol consists of four layers and is arguably just a summarised version of the OSI model. These layers are:

    Application
    Transport
    Internet
    Network Interface

Very similar to how the OSI model works, information is added to each layer of the TCP model as the piece of data (or packet) traverses it. As you may recall, this process is known as encapsulation - where the reverse of this process is decapsulation.

One defining feature of TCP is that it is connection-based, which means that TCP must establish a connection between both a client and a device acting as a server before data is sent.

Because of this, TCP guarantees that any data sent will be received on the other end. This process is named the Three-way handshake, which is something we'll come on to discuss shortly. A table comparing the advantages and disadvantages of TCP is located below:

          Advantages of TCP	                                               Disadvantages of TCP
    Guarantees the integrity of data.	                 Requires a reliable connection between the two devices.If one small chunk of data is not received, then the entire chunk of data cannot be used and must be re-sent.

Capable of synchronising two devices to prevent each     A slow connection can bottleneck another device as the connection will be reserved on the other device the whole time.
other from being flooded with data in the wrong order.	

Performs a lot more processes for reliability	         TCP is significantly slower than UDP because more work (computing) has to be done by the devices using this protocol.

